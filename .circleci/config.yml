version: 2.1

orbs:
  win: circleci/windows@5.0.0
  prodsec: snyk/prodsec-orb@1.0

defaults: &defaults
  parameters:
    node_version:
      type: string
      default: ''
  working_directory: ~/snyk-nuget-plugin

windows_defaults: &windows_defaults
  environment:
    npm_config_loglevel: silent
  executor:
    name: win/default
    shell: bash

commands:
  install_deps:
    description: Install dependencies
    steps:
      - run:
          name: Install dependencies
          command: npm install

  install_node_npm:
    description: Install correct Node version
    parameters:
      node_version:
        type: string
        default: ''
    steps:
      - run:
          name: Install correct version of Node
          command: nvm install << parameters.node_version >>
      - run:
          name: Use correct version of Node
          command: |
            nvm list
            nvm use << parameters.node_version >>

  show_node_version:
    description: Log Node and npm version
    steps:
      - run:
          name: Node version
          command: node --version
      - run:
          name: NPM version
          command: npm --version

  install_dotnet:
    description: Install the dotnet CLI
    parameters:
      dotnet_version:
        type: string
        default: '7.0'
    steps:
      - restore_cache:
          name: Restore Dotnet executable
          keys:
            - dotnet-cli-{{ arch }}-{{ .Branch }}-v2
      - run:
          name: Download and install dotnet
          command: |
            if ! command -v dotnet &> /dev/null
            then
              echo "dotnet could not be found, downloading and installing"
              curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin --channel << parameters.dotnet_version >> --install-dir ~/.local/apps/dotnet
              ln -s ~/.local/apps/dotnet/dotnet ~/.local/bin/
              exit
            fi
      - save_cache:
          key: dotnet-cli-{{ arch }}-{{ .Branch }}-v2
          paths:
            - ~/.local/apps/dotnet
            - ~/.local/bin/dotnet

  show_dotnet_version:
    description: Log Dotnet version
    steps:
      - run:
          name: Dotnet version
          command: dotnet --version

jobs:
  lint:
    <<: *defaults
    docker:
      - image: cimg/node:<< parameters.node_version >>
    steps:
      - checkout
      - install_deps
      - show_node_version
      - run:
          name: Run lint
          command: npm run lint

  test-windows:
    environment:
      DOTNET_CLI_TELEMETRY_OPTOUT: 'true'
    <<: *defaults
    <<: *windows_defaults
    steps:
      - run: git config --global core.autocrlf false
      - checkout
      - install_node_npm:
          node_version: << parameters.node_version >>
      - install_deps
      - show_node_version
      - run:
          name: Run tests
          command: npm test
          shell: bash.exe

  test-unix:
    environment:
      DOTNET_CLI_TELEMETRY_OPTOUT: 'true'
    <<: *defaults
    docker:
      - image: cimg/node:<< parameters.node_version >>
    steps:
      - checkout
      - install_deps
      - show_node_version
      - install_dotnet
      - show_dotnet_version
      - run:
          name: Run tests
          command: npm test

  release:
    <<: *defaults
    docker:
      - image: cimg/node:<< parameters.node_version >>
    resource_class: small
    steps:
      - checkout
      - install_deps
      - run:
          name: Publish to GitHub
          command: npx semantic-release

workflows:
  version: 2
  test_and_release:
    jobs:
      - prodsec/secrets-scan:
          name: Scan repository for secrets
          context:
            - snyk-bot-slack
          channel: os-team-managed-alerts

      - lint:
          name: Lint
          context: nodejs-install
          node_version: '16.20'
          filters:
            branches:
              ignore:
                - master

      # UNIX tests
      - test-unix:
          name: Unix Tests for Node=16
          context: nodejs-install
          node_version: '16.20'
          requires:
            - Lint
          filters:
            branches:
              ignore:
                - master

      - test-unix:
          name: Unix Tests for Node=18
          context: nodejs-install
          node_version: '18.16'
          requires:
            - Lint
          filters:
            branches:
              ignore:
                - master

      - test-unix:
          name: Unix Tests for Node=20
          context: nodejs-install
          node_version: '20.3'
          requires:
            - Lint
          filters:
            branches:
              ignore:
                - master

      # Windows tests
      - test-windows:
          name: Windows Tests for Node=16
          context: nodejs-install
          node_version: '16.20.0'
          requires:
            - Lint
          filters:
            branches:
              ignore:
                - master

      - test-windows:
          name: Windows Tests for Node=18
          context: nodejs-install
          node_version: '18.16.0'
          requires:
            - Lint
          filters:
            branches:
              ignore:
                - master

      - test-windows:
          name: Windows Tests for Node=20
          context: nodejs-install
          node_version: '20.3.1'
          requires:
            - Lint
          filters:
            branches:
              ignore:
                - master

      # Release
      - release:
          name: Release
          context: nodejs-app-release
          node_version: 'lts'
          filters:
            branches:
              only:
                - master
